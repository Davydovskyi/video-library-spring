plugins {
    id 'java'
    id "org.springframework.boot" version "3.1.5"
    id 'io.spring.dependency-management' version "1.1.3"
    id "io.freefair.lombok" version "8.4"
    id 'jacoco'
}

apply from: './version.gradle'

group = 'edu.jcourse'
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.data:spring-data-envers'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.springdoc}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'
    implementation "com.querydsl:querydsl-jpa:${versions.querydsl}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${versions.querydsl}:jakarta"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
}

test {
    maxParallelForks 3
    useJUnitPlatform()
}

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
            ])
        })
    }
}

test.finalizedBy jacocoTestReport
jacocoTestReport.dependsOn test